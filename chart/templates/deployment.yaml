---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: jukebox-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: jukebox-ui
  template:
    metadata:
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: jukebox-ui
    spec:
      containers:
        - resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 100m
              memory: 128Mi
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          name: jukebox-ui
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          env:
            - name: API_URL
              value: '{{ .Values.model_endpoint }}'
            - name: INPUT_NODE
              value: '{{ .Values.input_node }}'
            - name: PORT
              value: '3000'
          securityContext:
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            allowPrivilegeEscalation: false
            seccompProfile:
              type: RuntimeDefault
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          imagePullPolicy: Always
          terminationMessagePolicy: File
          image: {{ .Values.image }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
